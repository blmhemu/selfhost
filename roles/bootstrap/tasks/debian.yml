---
# tasks file for bootstrap

- name: Check if /boot/armbianEnv.txt exists
  stat:
    path: /boot/armbianEnv.txt
  register: armbian

- name: Enable cgroups v2 on nas (armbian)
  become: true
  lineinfile:
    path: /boot/armbianEnv.txt
    regexp: ^extraargs=systemd[.]unified_cgroup_hierarchy=1$
    line: extraargs=systemd.unified_cgroup_hierarchy=1
    state: present
  register: cgroup_armbian
  when: armbian.stat.exists

- name: Check if /boot/firmware/cmdline.txt exists
  stat:
    path: /boot/firmware/cmdline.txt
  register: raspberry

- name: Enable cgroups v2 on rpi
  become: true
  replace:
    path: /boot/firmware/cmdline.txt
    regexp: '^([\w](?!.*\b{{ item }}\b).*)$'
    replace: '\1 {{ item }}'
  with_items:
  - "systemd.unified_cgroup_hierarchy=1"
  register: cgroup_rpi
  when: raspberry.stat.exists

- name: Set timezone to Asia/Kolkata
  become: true
  timezone:
    name: Asia/Kolkata

- name: Ensure US locale exists
  become: true
  locale_gen:
    name: en_US.UTF-8
    state: present

- name: Update apt-cache and do dist upgrade
  become: true
  apt:
    update_cache: yes
    cache_valid_time: 3600
    upgrade: dist

- name: Check if reboot-required file is set
  stat:
    path: /var/run/reboot-required
  register: reboot_required_file

- name: Ensure hostname is properly set
  become: true
  hostname:
    name: "{{ inventory_hostname }}"
  register: hostname_status
  when: ansible_hostname != inventory_hostname

- name: add hostname to /etc/hosts
  become: true
  vars:
    comment: '# added by ansible'
  lineinfile:
    dest: /etc/hosts
    regexp: "127[.]0[.]0[.]1.*"
    line: "127.0.0.1 localhost.localdomain localhost {{ ansible_hostname }} {{ comment }}"
    state: present
    backup: yes

- name: Add Ansible inventory mappings to /etc/hosts
  become: true
  blockinfile:
    path: /etc/hosts
    block: |
      {% for host in groups['all'] %}
      {{ hostvars[host].ansible_host }} {{ host }}
      {% endfor %}

# TODO: Check if this can be done in a handler
- name: Reboot if required
  become: true
  reboot:
  when: >
    reboot_required_file.stat.exists == true or
    hostname_status.changed or
    cgroup_rpi.results[0].changed == true or
    cgroup_armbian.changed == true

- name: Clean unused deps and configs
  become: true
  apt:
    autoremove: yes
    purge: yes

- name: Clean apt cache
  become: true
  apt:
    autoclean: yes

- name: Install useful packages
  become: true
  apt:
    name: "{{ packages }}"
    state: present
