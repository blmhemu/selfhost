---
# tasks file for ansible_zpool

- name: Ensure var disk_id is set
  fail: 
    msg: Please set a disk_id. (Optional) Encrypt before setting.
  when: disk_id is not defined

- name: Install linux headers
  become: true
  apt:
    name: linux-headers-current-{{ ansible_kernel.split('-')[-1] }}
    state: present

# These packages are from armbian mirror which are not so stable. Hence retry on failure
- name: Install zfs and friends
  become: true
  apt:
    name:
      - zfs-dkms
      - zfsutils-linux
      - zfs-auto-snapshot
    state: present
  register: zfs_result
  until: zfs_result is not failed
  retries: 10
  delay: 10

- name: Check if zpool '{{ pool_name }}' exists
  become: true
  command: zpool status {{ pool_name }}
  changed_when: false
  register: zpool_status
  failed_when: zpool_status.rc not in [0, 1]

- name: Try import zpool '{{ pool_name }}'
  become: true
  command: zpool import {{ pool_name }}
  register: zpool_import_status
  changed_when: zpool_import_status.rc == 0
  failed_when: zpool_import_status.rc not in [0, 1]
  when: zpool_status.rc == 1

- name: Format disk and create zpool '{{ pool_name }}'
  block:
    - name: Read partition information (always use unit when probing)
      community.general.parted:
        device: /dev/disk/by-id/{{ disk_id }}
        unit: MiB
      register: disk_info

    - name: Format disk
      become: true
      parted:
        device: /dev/disk/by-id/{{ disk_id }}
        number: "{{ item.num }}"
        state: absent
      loop: "{{ disk_info.partitions }}"

    - name: Create new zpool '{{ pool_name }}'
      become: true
      command: zpool create -o ashift=12 -m {{ mount_point }} {{ pool_name }} {{ disk_id }}
  when:
    - zpool_status.rc == 1
    - zpool_import_status.rc == 1

# TODO: Ensure ZFS_MOUNT='yes' and ZFS_UNMOUNT='yes' in /etc/default/zfs